import type { Theme } from './types';

///ts ignore
const themeColorsMap = {
  'indigo-600': '#4f46e5',
  'rose-600': '#e11d48',
  'teal-600': '#0d9488',
  'amber-500': '#f59e0b',
  'slate-500': '#64748b',
  'sky-500': '#0ea5e9',
  'red-500': '#ef4444',
  'green-500': '#22c55e',
  'violet-500': '#8b5cf6',
};

// FIX: Define base themes in a separate object to avoid self-reference during initialization.
const baseThemes: Record<string, Theme> = {
  indigo: {
    name: "Indigo",
    themeColorHex: themeColorsMap['indigo-600'],
    colors: {
      mainBg: "bg-slate-50",
      mainText: "text-slate-800",
      cardBg: "bg-white",
      cardHeader: "text-slate-900",
      secondaryText: "text-slate-600",
      mutedText: "text-slate-500",
      primary: "bg-indigo-600",
      primaryText: "text-white",
      primaryAccent: "bg-indigo-500",
      primaryAccentLight: "bg-indigo-400",
      primaryMuted: "text-indigo-700",
      primaryMutedBg: "bg-indigo-100",
      primaryBorder: "border-indigo-200",
      primaryLightestBg: "bg-indigo-50",
      ring: "focus-visible:ring-indigo-500",
      button: {
        hoverBg: "hover:bg-slate-200",
        disabledBg: "bg-slate-300",
        disabledText: "text-slate-400",
      },
      classType: {
        lecture: "bg-blue-100 text-blue-800",
        seminar: "bg-green-100 text-green-800",
        lab: "bg-yellow-100 text-yellow-800",
      },
      divider: "border-slate-200",
      navBarBg: "bg-white/80",
    },
  },
  rose: {
    name: "Rose",
    themeColorHex: themeColorsMap['rose-600'],
    colors: {
      mainBg: "bg-stone-50",
      mainText: "text-stone-800",
      cardBg: "bg-white",
      cardHeader: "text-stone-900",
      secondaryText: "text-stone-600",
      mutedText: "text-stone-500",
      primary: "bg-rose-600",
      primaryText: "text-white",
      primaryAccent: "bg-rose-500",
      primaryAccentLight: "bg-rose-400",
      primaryMuted: "text-rose-700",
      primaryMutedBg: "bg-rose-100",
      primaryBorder: "border-rose-200",
      primaryLightestBg: "bg-rose-50",
      ring: "focus-visible:ring-rose-500",
      button: {
        hoverBg: "hover:bg-stone-200",
        disabledBg: "bg-stone-300",
        disabledText: "text-stone-400",
      },
      classType: {
        lecture: "bg-rose-100 text-rose-800",
        seminar: "bg-amber-100 text-amber-800",
        lab: "bg-fuchsia-100 text-fuchsia-800",
      },
      divider: "border-stone-200",
      navBarBg: "bg-white/80",
    },
  },
  teal: {
    name: "Teal",
    themeColorHex: themeColorsMap['teal-600'], 
    colors: {
      mainBg: "bg-slate-50",
      mainText: "text-slate-800",
      cardBg: "bg-white",
      cardHeader: "text-slate-900",
      secondaryText: "text-slate-600",
      mutedText: "text-slate-500",
      primary: "bg-teal-600",
      primaryText: "text-white",
      primaryAccent: "bg-teal-500",
      primaryAccentLight: "bg-teal-400",
      primaryMuted: "text-teal-700",
      primaryMutedBg: "bg-teal-100",
      primaryBorder: "border-teal-200",
      primaryLightestBg: "bg-teal-50",
      ring: "focus-visible:ring-teal-500",
      button: {
        hoverBg: "hover:bg-slate-200",
        disabledBg: "bg-slate-300",
        disabledText: "text-slate-400",
      },
      classType: {
        lecture: "bg-cyan-100 text-cyan-800",
        seminar: "bg-emerald-100 text-emerald-800",
        lab: "bg-lime-100 text-lime-800",
      },
      divider: "border-slate-200",
      navBarBg: "bg-white/80",
    },
  },
  amber: {
    name: "Amber",
    themeColorHex: themeColorsMap['amber-500'],
    colors: {
      mainBg: "bg-stone-100",
      mainText: "text-stone-800",
      cardBg: "bg-white",
      cardHeader: "text-stone-900",
      secondaryText: "text-stone-600",
      mutedText: "text-stone-500",
      primary: "bg-amber-500",
      primaryText: "text-stone-900",
      primaryAccent: "bg-amber-400",
      primaryAccentLight: "bg-amber-300",
      primaryMuted: "text-amber-700",
      primaryMutedBg: "bg-amber-100",
      primaryBorder: "border-amber-300",
      primaryLightestBg: "bg-amber-50",
      ring: "focus-visible:ring-amber-500",
      button: {
        hoverBg: "hover:bg-stone-200",
        disabledBg: "bg-stone-300",
        disabledText: "text-stone-500",
      },
      classType: {
        lecture: "bg-orange-100 text-orange-800",
        seminar: "bg-lime-100 text-lime-800",
        lab: "bg-yellow-100 text-yellow-800",
      },
      divider: "border-stone-200",
      navBarBg: "bg-white/80",
    },
  },
  slate: {
    name: "Slate",
    themeColorHex: themeColorsMap['slate-500'],
    colors: {
      mainBg: "bg-slate-900",
      mainText: "text-slate-300",
      cardBg: "bg-slate-800",
      cardHeader: "text-slate-100",
      secondaryText: "text-slate-400",
      mutedText: "text-slate-500",
      primary: "bg-slate-500",
      primaryText: "text-white",
      primaryAccent: "bg-slate-600",
      primaryAccentLight: "bg-slate-400",
      primaryMuted: "text-slate-400",
      primaryMutedBg: "bg-slate-700/50",
      primaryBorder: "border-slate-600",
      primaryLightestBg: "bg-slate-700/30",
      ring: "focus-visible:ring-slate-500",
      button: {
        hoverBg: "hover:bg-slate-700",
        disabledBg: "bg-slate-600",
        disabledText: "text-slate-400",
      },
      classType: {
        lecture: "bg-indigo-900 text-indigo-300",
        seminar: "bg-emerald-900 text-emerald-300",
        lab: "bg-amber-900 text-amber-300",
      },
      divider: "border-slate-700",
      navBarBg: "bg-slate-800/80",
    },
  },
  'dark-sky': {
    name: "Dark Sky",
    themeColorHex: themeColorsMap['sky-500'],
    colors: {
      mainBg: "bg-slate-900",
      mainText: "text-slate-300",
      cardBg: "bg-slate-800",
      cardHeader: "text-slate-100",
      secondaryText: "text-slate-400",
      mutedText: "text-slate-500",
      primary: "bg-sky-500",
      primaryText: "text-white",
      primaryAccent: "bg-sky-600",
      primaryAccentLight: "bg-sky-400",
      primaryMuted: "text-sky-400",
      primaryMutedBg: "bg-sky-900/50",
      primaryBorder: "border-sky-700",
      primaryLightestBg: "bg-sky-900/30",
      ring: "focus-visible:ring-sky-500",
      button: {
        hoverBg: "hover:bg-slate-700",
        disabledBg: "bg-slate-600",
        disabledText: "text-slate-400",
      },
      classType: {
        lecture: "bg-indigo-900 text-indigo-300",
        seminar: "bg-emerald-900 text-emerald-300",
        lab: "bg-amber-900 text-amber-300",
      },
      divider: "border-slate-700",
      navBarBg: "bg-slate-800/80",
    },
  },
};

export const themes: Record<string, Theme> = {
  ...baseThemes,
  red: {
    name: "Red",
    themeColorHex: themeColorsMap['red-500'],
    colors: {      ...baseThemes.indigo.colors,
      primary: "bg-red-600",
      primaryAccent: "bg-red-500",
      primaryAccentLight: "bg-red-400",
      primaryMuted: "text-red-700",
      primaryMutedBg: "bg-red-100",
      primaryBorder: "border-red-200",
      primaryLightestBg: "bg-red-50",
      ring: "focus-visible:ring-red-500",
    },
  },
  green: {
    name: "Green",
    themeColorHex: themeColorsMap['green-500'],
    colors: {      ...baseThemes.indigo.colors,
      primary: "bg-green-600",
      primaryAccent: "bg-green-500",
      primaryAccentLight: "bg-green-400",
      primaryMuted: "text-green-700",
      primaryMutedBg: "bg-green-100",
      primaryBorder: "border-green-200",
      primaryLightestBg: "bg-green-50",
      ring: "focus-visible:ring-green-500",
    },
  },
  sky: {
    name: "Sky",
    themeColorHex: themeColorsMap['sky-500'],
    colors: {      ...baseThemes.indigo.colors,
      primary: "bg-sky-600",
      primaryAccent: "bg-sky-500",
      primaryAccentLight: "bg-sky-400",
      primaryMuted: "text-sky-700",
      primaryMutedBg: "bg-sky-100",
      primaryBorder: "border-sky-200",
      primaryLightestBg: "bg-sky-50",
      ring: "focus-visible:ring-sky-500",
    },
  },
  violet: {
    name: "Violet",
    themeColorHex: themeColorsMap['violet-500'],
    colors: {      ...baseThemes.indigo.colors,
      primary: "bg-violet-600",
      primaryAccent: "bg-violet-500",
      primaryAccentLight: "bg-violet-400",
      primaryMuted: "text-violet-700",
      primaryMutedBg: "bg-violet-100",
      primaryBorder: "border-violet-200",
      primaryLightestBg: "bg-violet-50",
      ring: "focus-visible:ring-violet-500",
    },
  },
  'dark-red': {
    name: "Dark Red",
    themeColorHex: themeColorsMap['red-500'],
    colors: {      ...baseThemes['dark-sky'].colors,
      primary: "bg-red-500",
      primaryAccent: "bg-red-600",
      primaryAccentLight: "bg-red-400",
      primaryMuted: "text-red-400",
      primaryMutedBg: "bg-red-900/50",
      primaryBorder: "border-red-700",
      primaryLightestBg: "bg-red-900/30",
      ring: "focus-visible:ring-red-500",
    },
  },
  'dark-green': {
    name: "Dark Green",
    themeColorHex: themeColorsMap['green-500'],
    colors: {      ...baseThemes['dark-sky'].colors,
      primary: "bg-green-500",
      primaryAccent: "bg-green-600",
      primaryAccentLight: "bg-green-400",
      primaryMuted: "text-green-400",
      primaryMutedBg: "bg-green-900/50",
      primaryBorder: "border-green-700",
      primaryLightestBg: "bg-green-900/30",
      ring: "focus-visible:ring-green-500",
    },
  },
  'dark-violet': {
    name: "Dark Violet",
    themeColorHex: themeColorsMap['violet-500'],
    colors: {      ...baseThemes['dark-sky'].colors,
      primary: "bg-violet-500",
      primaryAccent: "bg-violet-600",
      primaryAccentLight: "bg-violet-400",
      primaryMuted: "text-violet-400",
      primaryMutedBg: "bg-violet-900/50",
      primaryBorder: "border-violet-700",
      primaryLightestBg: "bg-violet-900/30",
      ring: "focus-visible:ring-violet-500",
    },
  },
};